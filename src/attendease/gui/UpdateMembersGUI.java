/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package attendease.gui;

import attendease.util.ATableModel;
import attendease.util.EFile;
import attendease.util.EFileReader;
import attendease.util.FrameController;
import attendease.util.Group;
import attendease.util.Start;
import attendease.util.Student;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/**
 *
 * @author james.wolff
 */
public class UpdateMembersGUI extends javax.swing.JFrame {

    public UpdateMembersGUI() {
        preInit();
        initComponents();
    }

    private void preInit(){
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            Start.createLog(ex, "Unable to set proper look and feel");
        }
        updateStews=new ArrayList<>();
        initTable();
    }
    
    private void initTable(){
        sTableModel=new ATableModel();
        sTableModel.addColumn("ID Number");
        sTableModel.addColumn("Name");
        sTableModel.addColumn("Points");
        sTableModel.addColumn("Meetings Attended");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        importMembersPanel = new javax.swing.JPanel();
        importLabel = new javax.swing.JLabel();
        importTextBox = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        addMemberPanel = new javax.swing.JPanel();
        studentNameLabel = new javax.swing.JLabel();
        asteriskLabel1 = new javax.swing.JLabel();
        studentNameTextBox = new javax.swing.JTextField();
        idNumberLabel = new javax.swing.JLabel();
        asteriskLabel2 = new javax.swing.JLabel();
        idNumberTextBox = new javax.swing.JTextField();
        pointsLabel = new javax.swing.JLabel();
        pointsTextBox = new javax.swing.JTextField();
        warningLabel = new javax.swing.JLabel();
        removeMemberPanel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchLabel = new javax.swing.JLabel();
        studentTableScrollPane = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        cancelButton.setText("Cancel");
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cancelButtonMouseReleased(evt);
            }
        });

        updateButton.setText("Import");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                updateButtonMouseReleased(evt);
            }
        });

        tabbedPane.setName("Update Group"); // NOI18N
        tabbedPane.setPreferredSize(new java.awt.Dimension(800, 500));
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabbedPaneStateChanged(evt);
            }
        });

        importMembersPanel.setPreferredSize(new java.awt.Dimension(735, 535));

        importLabel.setText("Import Students as Excel File");

        browseButton.setText("Browse...");
        browseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                browseButtonMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout importMembersPanelLayout = new javax.swing.GroupLayout(importMembersPanel);
        importMembersPanel.setLayout(importMembersPanelLayout);
        importMembersPanelLayout.setHorizontalGroup(
            importMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importMembersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(importMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(importMembersPanelLayout.createSequentialGroup()
                        .addComponent(importLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(importMembersPanelLayout.createSequentialGroup()
                        .addComponent(importTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(browseButton)))
                .addContainerGap())
        );
        importMembersPanelLayout.setVerticalGroup(
            importMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(importMembersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(importLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(importMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseButton))
                .addContainerGap(471, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Import Members", importMembersPanel);

        addMemberPanel.setPreferredSize(new java.awt.Dimension(735, 535));

        studentNameLabel.setText("Student Name");

        asteriskLabel1.setForeground(new java.awt.Color(255, 0, 0));
        asteriskLabel1.setText("*");

        studentNameTextBox.setText("John Doe");

        idNumberLabel.setText("ID Number");

        asteriskLabel2.setForeground(new java.awt.Color(255, 0, 0));
        asteriskLabel2.setText("*");

        pointsLabel.setText("Number of Points");

        pointsTextBox.setText("0");

        warningLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        warningLabel.setForeground(java.awt.Color.red);
        warningLabel.setText("* indicates a required field");

        javax.swing.GroupLayout addMemberPanelLayout = new javax.swing.GroupLayout(addMemberPanel);
        addMemberPanel.setLayout(addMemberPanelLayout);
        addMemberPanelLayout.setHorizontalGroup(
            addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMemberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(addMemberPanelLayout.createSequentialGroup()
                        .addComponent(idNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asteriskLabel2))
                    .addComponent(pointsLabel)
                    .addComponent(warningLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addMemberPanelLayout.createSequentialGroup()
                        .addComponent(studentNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(asteriskLabel1))
                    .addComponent(pointsTextBox)
                    .addComponent(idNumberTextBox)
                    .addComponent(studentNameTextBox))
                .addContainerGap(668, Short.MAX_VALUE))
        );
        addMemberPanelLayout.setVerticalGroup(
            addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMemberPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentNameLabel)
                    .addComponent(asteriskLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentNameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idNumberLabel)
                    .addComponent(asteriskLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idNumberTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pointsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pointsTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(warningLabel)
                .addContainerGap(363, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Add Member", addMemberPanel);

        removeMemberPanel.setPreferredSize(new java.awt.Dimension(800, 535));

        tablePanel.setPreferredSize(new java.awt.Dimension(800, 600));

        searchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextFieldKeyReleased(evt);
            }
        });

        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchLabel.setText("Search Student:");

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Points", "Meeting"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        studentTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        studentTable.setAutoscrolls(false);
        studentTable.setRowHeight(24);
        studentTable.getTableHeader().setReorderingAllowed(false);
        studentTableScrollPane.setViewportView(studentTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentTableScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                    .addGroup(tablePanelLayout.createSequentialGroup()
                        .addComponent(searchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchLabel))
                .addGap(18, 18, 18)
                .addComponent(studentTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout removeMemberPanelLayout = new javax.swing.GroupLayout(removeMemberPanel);
        removeMemberPanel.setLayout(removeMemberPanelLayout);
        removeMemberPanelLayout.setHorizontalGroup(
            removeMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMemberPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        removeMemberPanelLayout.setVerticalGroup(
            removeMemberPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeMemberPanelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(tablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Remove Member", removeMemberPanel);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(33, 33, 33)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(updateButton)))
        );

        fileMenu.setText("File");

        homeMenuItem.setText("Home");
        homeMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                homeMenuItemMouseReleased(evt);
            }
        });
        homeMenuItem.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
                homeMenuItemMenuKeyTyped(evt);
            }
        });
        fileMenu.add(homeMenuItem);

        exitMenuItem.setText("Quit");
        exitMenuItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                exitMenuItemMouseReleased(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");
        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeMenuItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMenuItemMouseReleased
        FrameController.getSmgp().setState("Group");
        FrameController.setCurrentPanel("smgp");
        FrameController.changeFrameState("mf");
        FrameController.changeFrameState("umg");
    }//GEN-LAST:event_homeMenuItemMouseReleased

    private void homeMenuItemMenuKeyTyped(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_homeMenuItemMenuKeyTyped
        FrameController.getSmgp().setState("Group");
        FrameController.setCurrentPanel("smgp");
    }//GEN-LAST:event_homeMenuItemMenuKeyTyped

    private void exitMenuItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMenuItemMouseReleased
        FrameController.dispose();
    }//GEN-LAST:event_exitMenuItemMouseReleased

    private void cancelButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseReleased
        FrameController.changeFrameState("umg");
        FrameController.changeFrameState("mf");
    }//GEN-LAST:event_cancelButtonMouseReleased

    private void updateButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseReleased
        if(tabbedPane.getSelectedIndex()==0){
            FrameController.getArmwg().setWarningString(true);
            Group tempGroup=new Group("temp"+FrameController.getSmgp().getCurrentGroupName());
            try {
                tempGroup.populateStudents(EFileReader.readFile(new EFile(importTextBox.getText())));
            } catch (IOException ex) {
                Start.createLog(ex, "Unable to add students to group "+FrameController.getSmgp().getCurrentGroupName());
            }
            updateStews=FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).getNonMembers(tempGroup.getStudents());
            FrameController.getArmwg().fillNameList(updateStews);
            FrameController.changeFrameState("armwg");
            new Thread(new Runnable(){
                @SuppressWarnings("empty-statement")
                public void run(){
                    while(FrameController.getArmwg().isVisible());
                    if(FrameController.getArmwg().approved()){
                        FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).updateStudents(getUpdateStudents(), true);
                        FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).setEPath(importTextBox.getText());
                        Start.d.addStudents(FrameController.getSmgp().getCurrentGroupName(), updateStews);
                    }
                }
            }).start();
        }else if(tabbedPane.getSelectedIndex()==1){
            Student tempStudent=new Student(studentNameTextBox.getText(), Integer.valueOf(idNumberTextBox.getText()), Integer.valueOf(pointsTextBox.getText()), 0);
            if(!FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).isMember(tempStudent)){
                FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).updateStudents(tempStudent, true);
                Start.d.addStudent(FrameController.getSmgp().getCurrentGroupName(), tempStudent);
                clear();
            }
        }else if(tabbedPane.getSelectedIndex()==2){
            FrameController.getArmwg().setWarningString(false);
            int[] selected=studentTable.getSelectedRows();
            ArrayList<String> temp=new ArrayList<>();
            for(int x:selected){
                temp.add((String)studentTable.getValueAt(x, 1));
            }
            updateStews=FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).getStudentsFromName(temp);
            FrameController.getArmwg().fillNameList(updateStews);
            FrameController.changeFrameState("armwg");
            new Thread(new Runnable(){
                @SuppressWarnings("empty-statement")
                public void run(){
                    while(FrameController.getArmwg().isVisible());
                    if(FrameController.getArmwg().approved()){
                        FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).updateStudents(getUpdateStudents(), false);
                        Start.d.deleteStudents(FrameController.getSmgp().getCurrentGroupName(), updateStews);
                    }
                }
            }).start();
        }else{
            FrameController.changeFrameState("mf");
            FrameController.changeFrameState("umg");
            clear();
        }
    }//GEN-LAST:event_updateButtonMouseReleased

    private void browseButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_browseButtonMouseReleased
        importTextBox.setText(FrameController.chooseFile());
    }//GEN-LAST:event_browseButtonMouseReleased

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        switch(tabbedPane.getSelectedIndex()){
            case 0:
            updateButton.setText("Import");
            break;
            case 1:
            updateButton.setText("Add");
            break;
            case 2:
            updateButton.setText("Remove");
            break;
            default:
            updateButton.setText("Update");
        }
    }//GEN-LAST:event_tabbedPaneStateChanged

    private void searchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextFieldKeyReleased
        if(searchTextField.getText()==null||searchTextField.getText().equals("")){
            fillStudentTable();
        }else{
            ArrayList<Student> newList=new ArrayList<>();
            fillStudentTable();
            for(Student s:currentList){
                if(s.getName().toLowerCase().contains(searchTextField.getText().toLowerCase())||(s.getID()+"").contains(searchTextField.getText())){
                    newList.add(s);
                }
            }
            fillStudentTable(newList);
        }
    }//GEN-LAST:event_searchTextFieldKeyReleased

    public static ArrayList<Student> getUpdateStudents(){
        return updateStews;
    }
    
    public void fillStudentTable(){
        initTable();
        currentList=FrameController.getGroup(FrameController.getSmgp().getCurrentGroupName()).getStudents();
        Collections.sort(currentList, new Comparator<Student>(){
                @Override
                public int compare(Student s1, Student s2){
                    Integer i1=s1.getID();
                    Integer i2=s2.getID();
                    return i1.compareTo(i2);
                }
            });
        for(Student s:currentList){
            sTableModel.addRow(new Object[]{s.getID(),s.getName(),s.getPoints(),s.getMeetingsAttended()});
        }
        studentTable.setModel(sTableModel);
    }
    
    public void fillStudentTable(ArrayList<Student> newStudents){
        initTable();
        currentList=newStudents;
        Collections.sort(currentList, new Comparator<Student>(){
                @Override
                public int compare(Student s1, Student s2){
                    Integer i1=s1.getID();
                    Integer i2=s2.getID();
                    return i1.compareTo(i2);
                }
            });
        for(Student s:currentList){
            sTableModel.addRow(new Object[]{s.getID(),s.getName(),s.getPoints(),s.getMeetingsAttended()});
        }
        studentTable.setModel(sTableModel);
    }
    
    public void clear(){
        importTextBox.setText("");
        studentNameTextBox.setText("Doe, John");
        idNumberTextBox.setText("");
        pointsTextBox.setText("0");
        searchTextField.setText("");
        initTable();
    }
    
    private static ArrayList<Student> updateStews;
    private static ArrayList<Student> currentList;
    private ATableModel sTableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addMemberPanel;
    private javax.swing.JLabel asteriskLabel1;
    private javax.swing.JLabel asteriskLabel2;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JLabel idNumberLabel;
    private javax.swing.JTextField idNumberTextBox;
    private javax.swing.JLabel importLabel;
    private javax.swing.JPanel importMembersPanel;
    private javax.swing.JTextField importTextBox;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel pointsLabel;
    private javax.swing.JTextField pointsTextBox;
    private javax.swing.JPanel removeMemberPanel;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JLabel studentNameLabel;
    private javax.swing.JTextField studentNameTextBox;
    private javax.swing.JTable studentTable;
    private javax.swing.JScrollPane studentTableScrollPane;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables
}
